{"singlePage": [], "startSite": "", "filingNum": "", "onePageListNum": 15, "commentLabelColor": "#006b75", "yearColorList": ["#bc4c00", "#0969da", "#1f883d", "#A333D0"], "i18n": "CN", "themeMode": "manual", "dayTheme": "light", "nightTheme": "dark", "urlMode": "pinyin", "script": "", "style": "", "head": "", "indexScript": "", "indexStyle": "", "bottomText": "", "showPostSource": 1, "iconList": {}, "UTC": 8, "rssSplit": "sentence", "exlink": {}, "needComment": 1, "allHead": "", "title": "\u5218\u4f73\u946b", "subTitle": "\u6b22\u8fce\u4f60", "avatarUrl": "https://github.githubassets.com/favicons/favicon.svg", "GMEEK_VERSION": "last", "postListJson": {"P1": {"htmlDir": "docs/post/test.html", "labels": ["bug"], "postTitle": "test", "postUrl": "post/test.html", "postSourceUrl": "https://github.com/donkeytt11111/ljx1997.github.io/issues/1", "commentNum": 0, "wordCount": 4, "description": "test\u3002", "top": 0, "createdAt": 1741159250, "style": "", "script": "", "head": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2025-03-05", "dateLabelColor": "#0969da"}, "P2": {"htmlDir": "docs/post/K8S_install.sh.html", "labels": ["UOS linux"], "postTitle": "K8S_install.sh", "postUrl": "post/K8S_install.sh.html", "postSourceUrl": "https://github.com/donkeytt11111/ljx1997.github.io/issues/2", "commentNum": 0, "wordCount": 6346, "description": "```shell\n\n#!/bin/bash\n\n# \u53d8\u91cf\u5b9a\u4e49\nIP_ADDRESS=$1\nHOSTNAME=$2\n\n# \u68c0\u67e5\u53c2\u6570\u662f\u5426\u4e3a\u7a7a\nif [ -z '$IP_ADDRESS' ] || [ -z '$HOSTNAME' ]; then\n    echo '\u4f7f\u7528\u9519\u8bef: \u4f7f\u7528\u65b9\u6cd5\u4e3a bash test.sh <IP\u5730\u5740> <\u4e3b\u673a\u540d>'\n    exit 1\nfi\n\n# \u8bbe\u7f6e\u4e3b\u673a\u540d\nset_hostname() {\n    hostnamectl set-hostname $HOSTNAME\n    current_hostname=$(hostname)\n    if [[ '$current_hostname' == *'cncp'* ]]; then\n        echo 'Hostname set successfully and contains 'cncp'.'\n        echo '$IP_ADDRESS $HOSTNAME' | sudo tee -a /etc/hosts\n    else\n        echo 'Hostname set successfully but does not contain 'cncp'. Exiting script.'\n        exit 1\n    fi\n}\n\n# \u521d\u59cb\u5316\u7f51\u7edc\u914d\u7f6e\ninitialize_network() {\n    nmcli con mod enp3s0 connection.autoconnect yes\n    systemctl enable NetworkManager\n\n    cat <<EOF | sudo tee -a /etc/profile\n#modprobe\nmodprobe ip6_tables\nmodprobe ip6table_mangle\nmodprobe ip6table_raw\nmodprobe ip6table_filter\nEOF\n    source /etc/profile\n    echo 'net.ipv6.conf.default.forwarding=1' >> /etc/sysctl.conf\n    echo 'net.ipv6.conf.all.forwarding=1' >> /etc/sysctl.conf\n    sysctl -p\n    sudo systemctl stop firewalld\n    sudo systemctl disable firewalld\n    sudo setenforce 0\n    sudo sed -i 's/^SELINUX=.*/SELINUX=disabled/' /etc/selinux/config\n    sudo swapoff -a\n\n    mkdir -p /opt/cni/bin\n    mkdir -p /etc/cni/net.d\n    tar -xzvf cni-plugins-linux-amd64-v1.6.2.tgz -C /opt/cni/bin\n}\n\n\n\n# \u5b89\u88c5\u548c\u914d\u7f6e chrony\ninstall_and_configure_chrony() {\n    yum install -y chrony\n    sed -i.bak '3,6d' /etc/chrony.conf\n    sed -i '3c server ntp1.aliyun.com iburst' /etc/chrony.conf\n\n    systemctl enable chronyd --now\n    systemctl restart chronyd\n    if systemctl is-active --quiet chronyd; then\n        echo 'chrony \u670d\u52a1\u6b63\u5728\u8fd0\u884c'\n    else\n        echo 'chrony \u670d\u52a1\u672a\u8fd0\u884c'\n        exit 1\n    fi\n    chronyc sources\n}\n\n# \u5b89\u88c5\u548c\u914d\u7f6e IPVS\ninstall_and_configure_ipvs() {\n    yum install -y conntrack-tools socat iproute-tc\n    yum -y install ipset ipvsadm ebtables socat ipset conntrack\n    cat > /etc/sysconfig/modules/ipvs.modules <<EOF\n#!/bin/bash\nmodprobe ip_vs\nmodprobe ip_vs_rr\nmodprobe ip_vs_wrr\nmodprobe ip_vs_sh\nmodprobe nf_conntrack\nEOF\n\n    chmod 755 /etc/sysconfig/modules/ipvs.modules && bash /etc/sysconfig/modules/ipvs.modules\n}\n\n# \u5b89\u88c5\u548c\u914d\u7f6e containerd\ninstall_and_configure_containerd() {\n    # \u89e3\u538b containerd\n    tar xf cri-containerd-1.7.3-linux-amd64.tar.gz  -C /\n    cp 05-cilium.conflist /etc/cni/net.d\n    sudo cp -rf  helm nerdctl runc  cilium /usr/local/bin/\n    mkdir -p /etc/containerd\n    cp -rf config.toml /etc/containerd/\n    cp -rf conf.d /etc/containerd/\n    sudo chmod +x  /usr/local/bin/helm /usr/local/bin/nerdctl  /usr/local/bin/runc  /usr/local/bin/cilium\n    sudo systemctl start containerd\n    sudo systemctl enable containerd\n    sudo systemctl restart containerd\n}\n\n# \u521b\u5efa\u5e76\u914d\u7f6e containerd.service \u6587\u4ef6\ncreate_containerd_service_file() {\n    cat > /etc/systemd/system/containerd.service <<EOF\n[Unit]\nDescription=containerd container runtime\nDocumentation=https://containerd.io\nAfter=network.target\n\n[Service]\nExecStart=/usr/local/bin/containerd\nExecReload=/bin/kill -HUP $MAINPID\nKillSignal=SIGQUIT\nDelegate=yes\nLimitNOFILE=1048576\nLimitNPROC=infinity\nLimitCORE=infinity\nTasksMax=infinity\nTimeoutStopSec=0\nRestart=always\nStartLimitBurst=3\nStartLimitInterval=60s\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\n    # \u91cd\u65b0\u52a0\u8f7d systemd \u914d\u7f6e\n    sudo systemctl daemon-reload\n}\n\n# \u5b89\u88c5\u548c\u914d\u7f6e Kubernetes\ninstall_and_configure_k8s() {\n    cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf\nnet.bridge.bridge-nf-call-iptables = 1\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.ipv4.ip_forward = 1\nEOF\n\n    modprobe br_netfilter && sysctl -p /etc/sysctl.d/k8s.conf\n\n\ncat <<EOF | sudo tee /etc/systemd/system/kubelet.service\n[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https://kubernetes.io/docs/concepts/overview/components/#kubelet\nAfter=containerd.service\nRequires=containerd.service\n\n[Service]\nExecStart=/usr/local/bin/kubelet \\\\\n  --kubeconfig=/etc/kubernetes/kubelet.conf \\\\\n  --config=/var/lib/kubelet/config.yaml \\\\\n  --v=2\nRestart=always\nStartLimitInterval=0\nRestartSec=10\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\n\n    systemctl daemon-reload\n    tar -xzf kubernetes-server-linux-amd64.tar.gz\n    sudo cp kubernetes/server/bin/kubeadm /usr/local/bin/\n    sudo cp kubernetes/server/bin/kubelet /usr/local/bin/\n    sudo cp kubernetes/server/bin/kubectl /usr/local/bin/\n\n    systemctl enable kubeadm --now\n    systemctl enable kubelet --now\n    systemctl enable kubectl --now\n    mkdir -p /var/lib/kubelet\n    chown -R root:root /var/lib/kubelet\n    chmod 755 /var/lib/kubelet\n    kubeadm config print init-defaults --component-configs KubeletConfiguration > /var/lib/kubelet/config.yaml\n    # \u6dfb\u52a0\u4e3b\u673a\u540d\u548cIP\u5230 /etc/hosts\n    systemctl enable kubelet && systemctl start kubelet\n}\n\n# \u66ff\u6362 kubeadm \u914d\u7f6e\u6587\u4ef6\u5185\u5bb9\nreplace_kubeadm_config() {\n    # \u4f7f\u7528 sed \u66ff\u6362\u6587\u4ef6\u5185\u5bb9\n    sed -i 's/172.16.9.120/$IP_ADDRESS/g' kubeadm.yaml\n    sed -i 's/CNCP-MS-01/$HOSTNAME/g' kubeadm.yaml\n    sed -i 's/cncp-ms-01/$HOSTNAME/g' cilium.yaml\n    sed -i 's/172.16.9.120/$IP_ADDRESS/g' cluster.yaml\n    echo '\u66ff\u6362\u5b8c\u6210'\n}\n\n# \u8bbe\u7f6e Kubernetes\nsetup_kubernetes() {\n    kubeadm init --config kubeadm.yaml --skip-phases=addon/kube-proxy --v=5\n    mkdir -p /root/.kube\n    cp -i /etc/kubernetes/admin.conf /root/.kube/config\n    chown root:root /root/.kube/config\n    kubectl create -f cilium.yaml\n    kubectl create -f cluster.yaml\n    kubectl create -f metallb-native.yaml\n    kubectl create -f dashboard-deploy-singlestack.yaml\n    kubectl create -f cni-installation-ds.yaml\n    kubectl create -f openebs.yaml\n    kubectl create -f openebs-sc.yaml\n}\n\n# \u5b89\u88c5\u548c\u914d\u7f6e NFS\ninstall_and_configure_nfs() {\n    yum install -y nfs-utils\n    systemctl enable --now nfs-server\n    echo '/var/local-storage *(rw,sync,no_root_squash)' | sudo tee -a /etc/exports\n    systemctl restart nfs-server\n}\n\n# \u5b89\u88c5\u548c\u914d\u7f6e\u6865\u63a5\u7f51\u7edc\ninstall_and_configure_bridge() {\n    yum install -y bridge-utils\n    brctl addbr br-eno6\n    ip link set br-eno6 up\n    brctl addif br-eno6 eno6\n    systemctl enable bridge-utils\n}\n\n# \u8bbe\u7f6e\u4e3b\u673a\u540d\nset_hostname\n\n# \u521d\u59cb\u5316\u7f51\u7edc\u914d\u7f6e\ninitialize_network\n\n\n# \u5b89\u88c5\u548c\u914d\u7f6echrony\ninstall_and_configure_chrony\n\n# \u5b89\u88c5\u548c\u914d\u7f6eipvs\ninstall_and_configure_ipvs\n\n# \u5b89\u88c5\u548c\u914d\u7f6econtainerd\ncreate_containerd_service_file\n\n# \u5b89\u88c5\u548c\u914d\u7f6ek8s\ninstall_and_configure_containerd\n\n# \u5b89\u88c5\u548c\u914d\u7f6ek8s\ninstall_and_configure_k8s\n\n# \u66ff\u6362kubeadm\u914d\u7f6e\nreplace_kubeadm_config\n\n# \u5b89\u88c5\u548c\u914d\u7f6ekubernetes\nsetup_kubernetes\n\n# \u5b89\u88c5\u548c\u914d\u7f6enfs\ninstall_and_configure_nfs\n\n# \u5b89\u88c5\u548c\u914d\u7f6ebridge\n# install_and_configure_bridge\n\u3002", "top": 0, "createdAt": 1741160193, "style": "", "script": "", "head": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2025-03-05", "dateLabelColor": "#0969da"}, "P3": {"htmlDir": "docs/post/ddi_install.sh.html", "labels": ["shell"], "postTitle": "ddi_install.sh", "postUrl": "post/ddi_install.sh.html", "postSourceUrl": "https://github.com/donkeytt11111/ljx1997.github.io/issues/3", "commentNum": 0, "wordCount": 8326, "description": "```shell\n#!/bin/bash\n\n\nif [ -z '$1' ] || [ -z '$2' ] || [ -z '$3' ] || [ -z '$4' ] || [ -z '$5' ] || [ -z '$6' ] || [ -z '$7' ] || [ -z '$8' ]; then\n    echo '\u8bf7\u63d0\u4f9b\u516b\u4e2aIP\u5730\u5740\u4f5c\u4e3a\u53c2\u6570\uff0c\u4f8b\u5982\uff1abash ddi.sh \u5730\u5740\u6c60\uff1aIPV4_1 IPV4_2 IPV6_1 IPV6_2 dnsIPV4_1 dnsIPV6_1 dhcpIPV4_1 dhcpIPV6_1'\n    echo '\u4f7f\u7528\u65b9\u5f0f\uff1abash ddi_install.sh 172.16.9.240 172.16.9.244 2408:862E:406:109::1000 2408:862E:406:109::2000 172.16.9.241 2408:862E:406:109::1000 172.16.9.242 2408:862E:406:109::1001'\n    exit 1\nfi\n\n\nLOG_FILE='./deployment.log'\n\n# \u65e5\u5fd7\nlog() {\n  local message='$(date +'%Y-%m-%d %H:%M:%S') - $1'\n  echo '$message' \n  echo '$message' >> '$LOG_FILE' \n}\n\nkubectl taint nodes cncp-ms-01 node-role.kubernetes.io/control-plane:NoSchedule-\nkubectl taint nodes cncp-ms-02 node-role.kubernetes.io/control-plane:NoSchedule-\nkubectl taint nodes cncp-ms-03 node-role.kubernetes.io/control-plane:NoSchedule-\nkubectl taint nodes cncp-ns-01 node-role.kubernetes.io/control-plane:NoSchedule-\nkubectl taint nodes cncp-ns-02 node-role.kubernetes.io/control-plane:NoSchedule-\nkubectl taint nodes cncp-ns-03 node-role.kubernetes.io/control-plane:NoSchedule-\n\ncheck_pods_running() {\n  while true; do\n    pod_status=$(kubectl get pods --all-namespaces --no-headers -o custom-columns=STATUS:.status.phase)\n    \n    if echo '$pod_status' | grep -q -vE 'Running|Completed|Succeeded'; then\n      log '\u5e76\u975e\u6240\u6709Pod\u90fd\u5904\u4e8eRunning\u3001Completed\u6216Succeeded\u72b6\u6001\uff0c\u7b49\u5f855\u79d2...'\n      sleep 5\n    else\n      log '\u6240\u6709Pod\u90fd\u5904\u4e8eRunning\u3001Completed\u6216Succeeded\u72b6\u6001\u3002", "top": 0, "createdAt": 1741160250, "style": "", "script": "", "head": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2025-03-05", "dateLabelColor": "#0969da"}}, "singeListJson": {}, "labelColorDict": {"docker": "#a2eeef", "harbor": "#7057ff", "help-note": "#008672", "K8S": "#cfd3d7", "python": "#ffffff", "shell": "#d876e3", "talos linux": "#0075ca", "tools-note": "#e4e669", "UOS linux": "#d73a4a"}, "displayTitle": "\u5218\u4f73\u946b", "faviconUrl": "https://github.githubassets.com/favicons/favicon.svg", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "primerCSS": "<link href='https://mirrors.sustech.edu.cn/cdnjs/ajax/libs/Primer/21.0.7/primer.css' rel='stylesheet' />", "homeUrl": "https://donkeytt11111.github.io/ljx1997.github.io", "prevUrl": "disabled", "nextUrl": "disabled"}